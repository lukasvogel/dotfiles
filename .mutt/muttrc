### Users and passwords

set my_realname = "Anders Damsgaard Christensen"

# Use GPG signature to decode pass file
# Password file (e.g. pass.txt) should be in the form:
#   NFIT password
#   Gmail password
# Encrypt it using `gpg -o ~/.sec/pass.gpg -e pass.txt`.
# Delete the plaintext pass.txt afterwards.
set my_tmp_secret = `gpg -o ~/.sec/.tmp -d ~/.sec/pass.gpg`

# NFIT credentials
set my_nfit_user = "ad\\adc"
set my_nfit_pass = `awk '/NFIT/ {print $2}' ~/.sec/.tmp`
set my_nfit_email = "adc@geo.au.dk"

# Gmail credentials
set my_gmail_email = "andersdc@gmail.com"
set my_gmail_pass = `awk '/Gmail/ {print $2}' ~/.sec/.tmp`

# Remove temporary password file
set my_del=`rm -f ~/.sec/.tmp`


# List of mail folders
mailboxes ~/Mail \
	  'imaps://imap.au.dk:993/'\
	  'imaps://imap.gmail.com:993/'

 # Base hook to reset account variables to known state before activating new ones
account-hook . 'unset preconnect imap_user imap_pass imap_authenticators; set ssl_starttls=ask-yes'

# NFIT mail
account-hook imaps://imap.au.dk:993/ 'set \
   imap_user = $my_nfit_user\
   imap_pass = $my_nfit_pass\
   imap_authenticators = "login"\
   smtp_authenticators = "login"\
   smtp_url = "smtp://$my_nfit_user@asmtp.au.dk:587"\
   smtp_pass = $my_nfit_pass'
folder-hook imaps://imap.au.dk:993/ 'set \
   spoolfile = "+INBOX"\
   record = "+Sent"\
   postponed = "+Drafts"\
   from = $my_nfit_email\
   realname = $my_realname'

# Gmail
account-hook imaps://imap.gmail.com:993/ 'set \
   imap_user = $my_gmail_email\
   imap_pass = $my_gmail_pass\
   smtp_url = "smtp://$my_gmail_user@smtp.gmail.com:587"\
   smtp_pass = $my_gmail_pass'
folder-hook imaps://imap.gmail.com:993/ 'set \
   spoolfile = "+INBOX"\
   record = "+[Gmail]/Sent Mail"\
   postponed = "+[Gmail]/Drafts"\
   from = $my_gmail_email\
   realname = $my_realname'

# Macros to change between inboxes
macro index <f2> '<change-folder>imaps://imap.au.dk:993/<enter>'
macro index <f3> '<change-folder>imaps://imap.gmail.com:993/<enter>'

# Cache files
set header_cache=~/.mutt/cache/headers
set message_cachedir=~/.mutt/cache/bodies

# Custom certificates
set certificate_file=~/.mutt/certificates

# Enable to automatically add all IMAP folders as mailboxes
set imap_check_subscribed

# allow Mutt to open new imap connections automatically
unset imap_passive

# keep imap connection alive by polling intermittently (time in seconds)
set imap_keepalive = 300

# how often to check for new mail (time in seconds)
set mail_check = 120

set signature=~/.signature
set charset=utf-8

set sort = threads    # and sort threads by date
set sort_aux = reverse-last-date-received
set signature=~/.signature
set charset=utf-8
set config_charset=utf-8
set noallow_8bit
set ascii_chars=yes
set send_charset="utf-8"
set assumed_charset="iso-8859-1"
set meta_key=yes
set attribution="* %n <%a> [%{%Y-%m-%d %H:%M:%S %Z}]:\n"
set edit_headers      # edit the message headers.
set fast_reply        # skip initial prompts when replying
set editor="vim +8 -c 'set tw=72 ft=mail noautoindent'"
set nomark_old        # Don't mark unread new msgs as old.
set nosmart_wrap      # Don't want smart wrapping.
set nomarkers         # Don't want any wrap markers.
set mime_forward      # Forward message as MIME attachments.
set pager_context=3   # Display 3 lines of context in pager.
set nostrict_threads  # Lets have some fuzzy threading.
set fcc_clear         # Keep fcc's clear of signatues and encryption.
set nopipe_decode     # Don't decode messages when piping.
set text_flowed       # label messages as format-flowed

set ispell="aspell -e -c"
set tilde            # Fill out messages with '~'.
set read_inc=100     # Read counter ticks every 100 msgs.
set write_inc=100    # Write counter ticks every 100 msgs.
set noconfirmappend  # Just append, don't hassle me.
set pager_stop	     # Don't skip msgs on next page.

# What we consider to be a quote.
set quote_regexp="^( {0,4}[>|:#%]| {0,4}[a-z0-9]+[>|]+)+"
set to_chars=" +TCF "   # Drop the "L".

# Display download progress every 5K
set net_inc=5

source ~/.mutt/gpg.rc   # Use GPG
source ~/.mutt/aliases  # Load in my aliases.
source ~/.mutt/colours  # Define colours.

auto_view text/html
# HTML is the last option.
alternative_order text/enriched text/plain text/html

# abook address book
set query_command= "abook --mutt-query '%s'"
macro index,pager A "<pipe-message>abook --add-email-quiet<return>" "add the sender address to abook"

macro index M "T.*\n;WN" "Mark all messages as read"

# Last, but not least, get mutt to display its version on startup.
push <show-version>

