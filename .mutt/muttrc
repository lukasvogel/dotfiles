set my_realname = "Anders Damsgaard"

# Use GPG signature to decode pass file
# Password file (e.g. pass.txt) should be in the form:
# NFIT password
# Gmail password
# UCSD password
# Encrypt it using `gpg -o ~/.sec/pass.gpg -e pass.txt`.
# Delete the plaintext pass.txt afterwards, e.g. `shred pass.txt && rm pass.txt`.
#set my_tmp_secret = `gpg -o ~/.sec/.tmp -d ~/.sec/pass.gpg`

# NFIT credentials
#set my_nfit_user = "ad\\adc"
#set my_nfit_pass = `awk '/NFIT/ {print $2}' ~/.sec/.tmp`
#set my_nfit_email = "anders.damsgaard@geo.au.dk"

# Riseup credentials
#set my_riseup_user = "andersd"
#set my_riseup_email = "andersd@riseup.net"
#set my_riseup_pass = `awk '/Riseup/ {print $2}' ~/.sec/.tmp`

# UCSD credentials
#set my_riseup_user = "adamsgaard"
#set my_riseup_email = "adamsgaard@ucsd.edu"
#set my_riseup_pass = `awk '/UCSD/ {print $2}' ~/.sec/.tmp`

# Gmail credentials
#set my_gmail_email = "andersdc@gmail.com"

# Remove temporary password file
#set my_del=`rm -f ~/.sec/.tmp`

# IMAP: offlineimap
set folder = "~/Mail"
source ~/.mutt/mailboxes
#set spoolfile = "+riseup/INBOX"
set spoolfile = "+riseup"
set record = "+riseup/Sent\ Items"
set postponed = "+riseup/Drafts"
set mbox_type=Maildir

# Send mail settings
folder-hook riseup 'set \
        from="Anders Damsgaard <andersd@riseup.net> "\
        realname="Anders Damsgaard"\
        record=+riseup/Sent\
        sendmail = "msmtp -a riseup"'

folder-hook geomail 'set \
        from="Anders Damsgaard <anders.damsgaard@geo.au.dk> "\
        realname="Anders Damsgaard"\
        record=+geomail/Sent\
        sendmail = "msmtp -a geomail"'

folder-hook ucsd 'set \
        from="Anders Damsgaard <adamsgaard@ucsd.edu> "\
        realname="Anders Damsgaard"\
        record=+ucsd/Sent\ Items\
        sendmail = "msmtp -a ucsd"'

folder-hook gmail 'set \
        from="Anders Damsgaard <andersdc@gmail.com> "\
        realname="Anders Damsgaard"\
        record=+gmail/Sent\ Mail\
        sendmail = "msmtp -a gmail"'

# Cache files
set header_cache=~/.mutt/cache/headers
set message_cachedir=~/.mutt/cache/bodies

# Custom certificates
set certificate_file=~/.mutt/certificates

# sort threads by date
set sort=threads
set sort_aux = reverse-last-date-received

set signature=~/.signature
set charset=utf-8
set config_charset=utf-8
set noallow_8bit
set ascii_chars=yes
set send_charset="utf-8"
set assumed_charset="iso-8859-1"
set meta_key=yes
set attribution="* %n <%a> [%{%Y-%m-%d %H:%M:%S %Z}]:\n"
set edit_headers      # edit the message headers.
set fast_reply        # skip initial prompts when replying
set editor="vim +8 -c 'set ft=mail noautoindent spell spelllang=en_US,da'"
set nomark_old        # Don't mark unread new msgs as old.
set nosmart_wrap      # Don't want smart wrapping.
set nomarkers         # Don't want any wrap markers.
set mime_forward      # Forward message as MIME attachments.
set pager_context=3   # Display 3 lines of context in pager.
set nostrict_threads  # Lets have some fuzzy threading.
set fcc_clear         # Keep fcc's clear of signatues and encryption.
set nopipe_decode     # Don't decode messages when piping.
set text_flowed       # label messages as format-flowed

set ispell="aspell -e -c"
set tilde            # Fill out messages with '~'.
set read_inc=100     # Read counter ticks every 100 msgs.
set write_inc=100    # Write counter ticks every 100 msgs.
set noconfirmappend  # Just append, don't hassle me.
set pager_stop	     # Don't skip msgs on next page.

# What we consider to be a quote.
set quote_regexp="^( {0,4}[>|:#%]| {0,4}[a-z0-9]+[>|]+)+"
set to_chars=" +TCF "   # Drop the "L".

# Display download progress every 5K
#
set net_inc=5

# When viewing a message, show the pager in # lines above
set pager_index_lines=5

# Mail check interval
set timeout = 15
set mail_check = 5    # how often (in seconds) mutt should look for new mail (default = 5 sec)

set alias_file=~/.mutt/aliases  # Save aliases here
source ~/.mutt/aliases  # Load in my aliases.
source ~/.sec/gpg.rc   # Use GPG
source ~/.mutt/colors  # Define colours.
#source ~/.mutt/mutt-colors-solarized/mutt-colors-solarized-dark-16.muttrc

auto_view text/html
# HTML is the last option.
alternative_order text/plain text/enriched text/html

# abook address book
set query_command= "abook --mutt-query '%s'"
macro index,pager A "<pipe-message>abook --add-email-quiet<return>" "add the sender address to abook"

bind index gg       first-entry
bind index G        last-entry

bind index R        group-reply
bind index <tab>    sync-mailbox
bind index <space>  collapse-thread

macro index M "T.*\n;WN" "Mark all messages as read"

# Macros to change between inboxes (e.g. SPACE 1), use noop editor to accept 
# IMAP folders with spaces
bind editor <space> noop
macro index \ 1 "<sync-mailbox><change-folder>=riseup/INBOX/<enter>" "Go to Riseup inbox"
macro index \ ! "<sync-mailbox><change-folder>=riseup/Sent/<enter>" "Go to Riseup sent"
macro index \ 2 "<sync-mailbox><change-folder>=geomail/INBOX/<enter>" "Go to Geomail inbox"
macro index \ @ "<sync-mailbox><change-folder>=geomail/Sent/<enter>" "Go to Geomail sent"
macro index \ 3 "<sync-mailbox><change-folder>=ucsd/INBOX/<enter>" "Go to UCSD inbox"
macro index \ \# "<sync-mailbox><change-folder>=ucsd/Sent Items/<enter>" "Go to UCSD sent"
macro index \ 4 "<sync-mailbox><change-folder>=gmail/INBOX/<enter>" "Go to Gmail inbox"
macro index \ $ "<sync-mailbox><change-folder>=gmail/[Gmail].Sent\ Mail/<enter>" "Go to Gmail sent"
macro index \ c "<sync-mailbox><change-folder>=geomail/INBOX.cryolist/<enter>" "Go to cryolist"

macro index A "!$EDITOR ~/.mutt/aliases\n:source ~/.mutt/aliases\n" "Edit aliases file and reload it"
macro pager A "!$EDITOR ~/.mutt/aliases\n:source ~/.mutt/aliases\n" "Edit aliases file and reload it"

# Sync email
macro index O "<shell-escape>offlineimap<enter>" "run offlineimap to sync all mail"
macro index o "<shell-escape>offlineimap -qf INBOX<enter>" "run offlineimap to sync inbox"

# View and select urls
macro pager U "|urlview<enter>" "call urlview to open links"

# notmuch integration
# 'L' performs a notmuch query, showing only the results
macro index L "<enter-command>unset wait_key<enter><shell-escape>read -p 'notmuch query: ' x; echo \$x >~/.cache/mutt_terms<enter><limit>~i \"\`notmuch search --output=messages \$(cat ~/.cache/mutt_terms) | head -n 600 | perl -le '@a=<>;chomp@a;s/\^id:// for@a;$,=\"|\";print@a'\`\"<enter>" "show only messages matching a notmuch pattern"
# 'a' shows all messages again (supersedes default <alias> binding)
macro index a "<limit>all\n" "show all messages (undo limit)"

# Get mutt to display its version on startup.
push <show-version>

